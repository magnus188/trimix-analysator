name: Build and Release

on:
  push:
    tags:
      - 'v*'
  release:
    types: [published]

jobs:
  build-source-package:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Validate requirements files
      run: |
        echo "ðŸ“¦ Validating Python requirements..."
        python -m pip install --upgrade pip
        pip install -r requirements-rpi.txt --dry-run
        echo "âœ… Requirements validation passed"

    - name: Create source package
      run: |
        echo "ðŸ“¦ Creating source package..."
        
        # Create package directory
        mkdir -p trimix-analyzer-${{ github.ref_name }}
        
        # Copy all application files except development stuff
        rsync -av \
          --exclude='.git*' \
          --exclude='__pycache__' \
          --exclude='*.pyc' \
          --exclude='.pytest_cache' \
          --exclude='htmlcov' \
          --exclude='.coverage' \
          --exclude='dist' \
          --exclude='build' \
          --exclude='.venv' \
          --exclude='data' \
          . trimix-analyzer-${{ github.ref_name }}/
        
        # Create version info for the application's built-in updater
        cat > trimix-analyzer-${{ github.ref_name }}/release-info.json << EOF
        {
          "version": "${{ github.ref_name }}",
          "release_date": "$(date -u +%Y-%m-%dT%H:%M:%SZ)",
          "platform": "raspberry-pi-native",
          "python_version": "3.11+",
          "changelog_url": "${{ github.server_url }}/${{ github.repository }}/releases/tag/${{ github.ref_name }}",
          "download_url": "${{ github.server_url }}/${{ github.repository }}/releases/download/${{ github.ref_name }}/trimix-analyzer-${{ github.ref_name }}.tar.gz"
        }
        EOF
        
        # Create archive
        tar -czf trimix-analyzer-${{ github.ref_name }}.tar.gz trimix-analyzer-${{ github.ref_name }}/

    - name: Upload source package to release
      if: github.event_name == 'release'
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ github.event.release.upload_url }}
        asset_path: trimix-analyzer-${{ github.ref_name }}.tar.gz
        asset_name: trimix-analyzer-${{ github.ref_name }}.tar.gz
        asset_content_type: application/gzip

    - name: Generate release summary
      if: github.event_name == 'release'
      run: |
        echo "## ðŸ¥§ Trimix Analyzer Release" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### Source Package" >> $GITHUB_STEP_SUMMARY
        echo "- Download: \`trimix-analyzer-${{ github.ref_name }}.tar.gz\`" >> $GITHUB_STEP_SUMMARY
        echo "- Contains \`release-info.json\` for built-in updater" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### Development Setup" >> $GITHUB_STEP_SUMMARY
        echo "- RPi: \`make install && make run\`" >> $GITHUB_STEP_SUMMARY
        echo "- Mac/Linux: \`make install && make dev\`" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### Features" >> $GITHUB_STEP_SUMMARY
        echo "- âœ… Native performance (no containers)" >> $GITHUB_STEP_SUMMARY
        echo "- âœ… Built-in update system" >> $GITHUB_STEP_SUMMARY
        echo "- âœ… Cross-platform development" >> $GITHUB_STEP_SUMMARY
        echo "- âœ… Optimized for Raspberry Pi Zero 2W" >> $GITHUB_STEP_SUMMARY
