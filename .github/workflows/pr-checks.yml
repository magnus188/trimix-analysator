name: Pull Request Checks

on:
  pull_request:
    branches: [ main ]
    types: [opened, synchronize, reopened]

jobs:
  lint:
    name: Code Quality Checks
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Check C++ formatting
      run: |
        # Check if any C++ files need formatting
        find esp32-lvgl-app/src esp32-lvgl-app/include -name "*.cpp" -o -name "*.h" | \
        xargs -I {} sh -c 'echo "Checking: {}"; head -20 "{}"' || echo "No C++ files found or accessible"
    
    - name: Validate platformio.ini
      run: |
        if [ -f esp32-lvgl-app/platformio.ini ]; then
          echo "✅ platformio.ini found"
          head -30 esp32-lvgl-app/platformio.ini
        else
          echo "❌ platformio.ini not found"
          exit 1
        fi
    
    - name: Check for common issues
      run: |
        echo "## 🔍 Code Quality Report" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        
        # Check for TODO comments
        TODO_COUNT=$(find esp32-lvgl-app -name "*.cpp" -o -name "*.h" | xargs grep -n "TODO\|FIXME\|XXX" | wc -l || echo "0")
        echo "- **TODO/FIXME comments**: $TODO_COUNT" >> $GITHUB_STEP_SUMMARY
        
        # Check for long lines
        LONG_LINES=$(find esp32-lvgl-app -name "*.cpp" -o -name "*.h" | xargs grep -n ".\{120\}" | wc -l || echo "0")
        echo "- **Lines > 120 chars**: $LONG_LINES" >> $GITHUB_STEP_SUMMARY
        
        # Count C++ files
        CPP_FILES=$(find esp32-lvgl-app -name "*.cpp" | wc -l || echo "0")
        H_FILES=$(find esp32-lvgl-app -name "*.h" | wc -l || echo "0")
        echo "- **C++ files**: $CPP_FILES" >> $GITHUB_STEP_SUMMARY
        echo "- **Header files**: $H_FILES" >> $GITHUB_STEP_SUMMARY
        
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### 📋 Status" >> $GITHUB_STEP_SUMMARY
        echo "Code quality checks completed. Review results above." >> $GITHUB_STEP_SUMMARY

  build:
    name: Build Test
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Cache PlatformIO
      uses: actions/cache@v4
      with:
        path: ~/.platformio
        key: ${{ runner.os }}-platformio-${{ hashFiles('**/platformio.ini') }}
        restore-keys: |
          ${{ runner.os }}-platformio-
    
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'
    
    - name: Install PlatformIO
      run: |
        python -m pip install --upgrade pip
        pip install --upgrade platformio
    
    - name: Test build
      run: |
        cd esp32-lvgl-app
        pio run --verbose
    
    - name: Build status
      run: |
        echo "## ✅ Build Test Result" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "ESP32 firmware builds successfully!" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "This PR is ready for review." >> $GITHUB_STEP_SUMMARY
