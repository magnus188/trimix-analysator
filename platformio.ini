[env:esp32dev]
platform = espressif32
board = esp32dev
framework = arduino

; LVGL Configuration
lib_deps = 
    lvgl/lvgl@^8.3.11
    bodmer/TFT_eSPI@^2.5.34
    bblanchon/ArduinoJson@^7.0.4
    ESP Async WebServer@^1.2.3
    AsyncTCP@^1.1.1
    WiFi
    WiFiClientSecure
    Update
    HTTPClient
    ESP32httpUpdate
    Wire
    SPI

; Build flags - Optimized for performance
build_flags = 
    -DUSER_SETUP_LOADED=1
    -DILI9341_DRIVER=1
    -DTFT_WIDTH=240
    -DTFT_HEIGHT=320
    -DTFT_MISO=19
    -DTFT_MOSI=23
    -DTFT_SCLK=18
    -DTFT_CS=15
    -DTFT_DC=2
    -DTFT_RST=4
    -DLOAD_GLCD=1
    -DLOAD_FONT2=1
    -DLOAD_FONT4=1
    -DLOAD_FONT6=1
    -DLOAD_FONT7=1
    -DLOAD_FONT8=1
    -DLOAD_GFXFF=1
    -DSMOOTH_FONT=1
    -DSPI_FREQUENCY=80000000
    -DSPI_READ_FREQUENCY=40000000
    -DSPI_TOUCH_FREQUENCY=2500000
    -DLV_CONF_INCLUDE_SIMPLE
    -DLV_USE_LOG=1
    -DLV_LOG_LEVEL=LV_LOG_LEVEL_INFO
    -O3
    -DCORE_DEBUG_LEVEL=0
    -DBOARD_HAS_PSRAM
    -mfix-esp32-psram-cache-issue
    -DARDUINO_USB_CDC_ON_BOOT=1

; Monitor configuration
monitor_speed = 115200
monitor_filters = esp32_exception_decoder

; Upload configuration
upload_speed = 921600


; Native simulator build
[env:native]
platform = native
build_flags =
  ; Include your existing include dir + LVGL
  -I include
  -I lib/lvgl

  ; Tell LVGL where to find your lv_conf.h
  -DLV_CONF_INCLUDE_SIMPLE
  -DLV_CONF_PATH=\"lv_conf.h\"

  ; Define NATIVE_BUILD to exclude Arduino-specific code
  -DNATIVE_BUILD
  
  ; Use headless LVGL build (no display drivers)
  -DLV_USE_OS=LV_OS_NONE

lib_extra_dirs =
  lib/lvgl_port/src

; Exclude Arduino-specific files from native build
build_src_filter = 
  +<*>
  -<utils/ota_update_manager.cpp>
  -<utils/sensor_interface.cpp>
  -<utils/storage_manager.cpp>
  -<utils/animation_manager.cpp>
  -<utils/performance_monitor.cpp>
  -<utils/theme_manager.cpp>
  -<screens/wifi_settings_screen.cpp>
  -<screens/update_settings_screen.cpp>
  -<screens/safety_settings_screen.cpp>
  -<screens/analyze_screen.cpp>
  -<screens/calibration_screen.cpp>

; No lib_deps here â€” LVGL lives in lib/lvgl